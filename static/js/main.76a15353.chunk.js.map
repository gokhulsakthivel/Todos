{"version":3,"sources":["Components/sidebar/Sidebaritem.js","Components/sidebar/sidebarArray.js","Services/firebase.js","Components/sidebar/Sidebarlist.js","Components/sidebar/Sidebar.js","Components/details/DetailBg.js","Components/details/Details.js","App.js","serviceWorker.js","index.js"],"names":["Sidebaritem","style","color","Math","floor","random","className","this","props","icon","name","count","Component","sidebarArray","id","listName","list","listCount","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","db","firestore","auth","Sidebarlist","state","array","styl","display","val","list_Name","storeListName","event","setState","target","value","addElementHandler","tempArray","slice","document","getElementById","console","log","push","length","collection","doc","add","changeInputValue","onFocusInputHandler","onBlurInputHandler","get","then","snapshot","docs","map","userDoc","listnamesDoc","data","catch","error","items","item","key","type","onFocus","onBlur","onKeyPress","onChange","placeholder","onClick","Sidebar","DetailBg","Detail","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.76a15353.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport WbSunnySharpIcon from '@material-ui/icons/WbSunnySharp';\r\nimport HomeSharpIcon from '@material-ui/icons/HomeSharp';\r\nimport FitnessCenterSharpIcon from '@material-ui/icons/FitnessCenterSharp';\r\nimport LocalGroceryStoreSharpIcon from '@material-ui/icons/LocalGroceryStoreSharp';\r\nimport ListSharpIcon from '@material-ui/icons/ListSharp';\r\n\r\nimport './Sidebaritem.css'\r\n\r\nclass Sidebaritem extends Component\r\n{\r\n    render()\r\n    {\r\n        // iconName = this\r\n        // const icon = this.props.icon;\r\n        var r = Math.floor((Math.random() * 255) + 1);\r\n        var g = Math.floor((Math.random() * 255) + 1);\r\n        var b = Math.floor((Math.random() * 255) + 1);\r\n        const style = {\r\n            color : 'rgb('+r+','+g+','+b+')'\r\n        }\r\n        return(\r\n            <div className=\"Sidebaritem\">\r\n                <div className=\"sidebaritem__left\">\r\n                    {\r\n                        this.props.icon === 'WbSunnySharpIcon' ? <WbSunnySharpIcon style={style}/> :\r\n                        this.props.icon === 'HomeSharpIcon' ? <HomeSharpIcon style={style}/> :\r\n                        this.props.icon === 'FitnessCenterSharpIcon' ? <FitnessCenterSharpIcon style={style}/> :\r\n                        this.props.icon === 'LocalGroceryStoreSharpIcon' ? <LocalGroceryStoreSharpIcon style={style}/> :\r\n                        <ListSharpIcon style={style}/>\r\n                    }\r\n                    <p>{this.props.name}</p>\r\n                    {/* <p>{this.props.count}</p> */}\r\n                </div>\r\n                <div className=\"sidebaritem__right\">\r\n                    {\r\n                        // this.props.count === '0' ? null :\r\n                        <p>{this.props.count}</p>\r\n                    }\r\n                    \r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Sidebaritem;","\r\n\r\nlet sidebarArray = [\r\n    {\r\n        id : 1,\r\n        icon : 'WbSunnySharpIcon',\r\n        listName : 'My Day',\r\n        list : [],\r\n        listCount : 0\r\n    },\r\n    {\r\n        id : 2,\r\n        icon : 'HomeSharpIcon',\r\n        listName : 'To-Do',\r\n        list : ['a','c'],\r\n        listCount : 0\r\n    },\r\n    {\r\n        id : 3,\r\n        icon : 'LocalGroceryStoreSharpIcon',\r\n        listName : 'Grocery',\r\n        list : [],\r\n        listCount : 0\r\n        \r\n    },\r\n    {\r\n        id : 4,\r\n        icon : 'ListSharpIcon',\r\n        listName : 'Others',\r\n        list : [],\r\n        listCount : 0\r\n    }\r\n];\r\n\r\n\r\nexport default sidebarArray;","import firebase, { firestore } from 'firebase';\r\nimport 'firebase/auth'\r\nimport 'firebase/database'\r\nimport 'firebase/analytics'\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDgSlT3R2-b3ttE8S2noFpPhlO3qqxJdkY\",\r\n    authDomain: \"todos-703b1.firebaseapp.com\",\r\n    databaseURL: \"https://todos-703b1.firebaseio.com\",\r\n    projectId: \"todos-703b1\",\r\n    storageBucket: \"todos-703b1.appspot.com\",\r\n    messagingSenderId: \"667809366567\",\r\n    appId: \"1:667809366567:web:e08827c505d0dfe5e3c402\",\r\n    measurementId: \"G-HR95GHMLEN\"\r\n  };\r\n  // Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();\r\n\r\nexport const db = firebase.firestore();\r\nexport const auth = firebase.auth();\r\n\r\nexport default firebase;   ","import React ,{Component} from 'react'\r\n// import Sidebar from './Sidebar'\r\nimport Sidebaritem from './Sidebaritem'\r\nimport sidebarArray from './sidebarArray'\r\nimport {db} from '../../Services/firebase'\r\n// import './sidebarlistfunctions'\r\nimport AddSharpIcon from '@material-ui/icons/AddSharp';\r\n// import BookmarkBorderSharpIcon from '@material-ui/icons/BookmarkBorderSharp';\r\n// import AddCircleSharpIcon from '@material-ui/icons/AddCircleSharp';\r\nimport BookSharpIcon from '@material-ui/icons/BookSharp';\r\n\r\n\r\nimport './Sidebarlist.css'\r\n\r\nclass Sidebarlist extends Component\r\n{\r\n\r\n    state = {\r\n        array : sidebarArray,\r\n        styl : {display:'none'},\r\n        val : \"NewList\",\r\n        list_Name : \"\"\r\n    }\r\n\r\n    \r\n    componentDidMount()\r\n    {\r\n        console.log(\"Mounted\")\r\n        db.collection(\"users\")\r\n            .get()\r\n            .then( snapshot => {\r\n                snapshot.docs.map((userDoc) =>{\r\n                    // console.log(userDoc['id'])\r\n                    db.collection(\"users\").doc(userDoc['id']).collection(\"listNames\")\r\n                        .get()\r\n                        .then( snapshot =>{\r\n                            let tempArray = []\r\n                            snapshot.docs.map((listnamesDoc) => {\r\n                                tempArray.push(listnamesDoc.data())\r\n                            })\r\n                            this.setState({\r\n                                array:tempArray\r\n                            })\r\n                        })\r\n                        .catch(error =>console.log(error))\r\n                })\r\n            })\r\n            .catch(error => console.log(error))\r\n    }\r\n\r\n    storeListName = (event) =>{\r\n        this.setState({\r\n            val : event.target.value\r\n        })\r\n    }\r\n\r\n    addElementHandler = () =>{\r\n        //alert(\"entered\")\r\n        let tempArray = this.state.array.slice();\r\n        let listName = document.getElementById(\"sidebar__input\").value;\r\n        // let listName = event.targetr.value;\r\n        \r\n        document.getElementById(\"sidebar__input\").value = ''\r\n        console.log(listName)\r\n        tempArray.push({\r\n            id : tempArray.length+1,\r\n            icon : 'ListSharpIcon',\r\n            listName : listName,\r\n            list : [],\r\n            listCount : 0\r\n        });\r\n        if(listName !== ''){\r\n        // console.log(tempArray)}\r\n        db.collection(\"users\").doc('iNIR1xqLjNNqpzMkuRJO').collection(\"listNames\")\r\n            .add({\r\n                id : tempArray.length,\r\n                icon : 'ListSharpIcon',\r\n                listName : listName,\r\n                list : [],\r\n                listCount : 0\r\n            })\r\n        this.setState({\r\n            array : tempArray\r\n        })\r\n        }\r\n        this.changeInputValue();\r\n        this.setState({\r\n            styl:{display:'none'}\r\n        })\r\n    }\r\n\r\n    onFocusInputHandler = () =>{\r\n        this.changeInputValue();\r\n        this.setState({\r\n            styl:{}\r\n        })\r\n    }\r\n\r\n    onBlurInputHandler = (event) =>{\r\n        if(event.target.value === '')\r\n        {\r\n            this.changeInputValue();\r\n            this.setState({\r\n                styl:{display:'none'}\r\n            })\r\n        }\r\n    }\r\n\r\n    changeInputValue = () => {\r\n\r\n        this.state.val === 'NewList' ?\r\n        // console.log('focus'):console.log('blur')\r\n        this.setState({\r\n            val : \"\"\r\n        }) :\r\n        this.setState({\r\n            val : \"NewList\"\r\n        })\r\n    }\r\n\r\n    render()\r\n    {\r\n\r\n        let items = this.state.array.map((item) => {\r\n            return <Sidebaritem \r\n                            key={item.id} \r\n                            name={item.listName} \r\n                            icon={item.icon} \r\n                            count={item.list.length}\r\n                            \r\n                    />\r\n        })\r\n        return(\r\n            <div className=\"sidebarlist\">\r\n                {items}\r\n\r\n                {/* <div className=\"sidebar__addInput\" style={this.state.styl}  >\r\n                        <input type=\"text\" id=\"sidebar__input\" />\r\n                        <AddCircleSharpIcon onClick={this.callFuntctionHandler}/>  \r\n                </div> */}\r\n\r\n                <div className=\"sidebar__newList\">\r\n                    <div className=\"sidebar__add\" >\r\n                        <AddSharpIcon/>\r\n                        <input \r\n                                type=\"text\" \r\n                                id=\"sidebar__input\" \r\n                                onFocus={this.onFocusInputHandler} \r\n                                onBlur={(event) => this.onBlurInputHandler(event)}\r\n                                onKeyPress={this.add}\r\n                                onChange={(event) => this.storeListName(event)}  \r\n                                value={this.state.val}  \r\n                                placeholder=\"Unanmed List\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"sidebar__submitIcon\">\r\n                        <BookSharpIcon  \r\n                                onClick={this.addElementHandler} \r\n                                style={this.state.styl}\r\n                        />\r\n                        {/* <BookmarkBorderSharpIcon/> */}\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Sidebarlist;","import React, { Component } from 'react'\r\n\r\nimport Sidebarlist from './Sidebarlist'\r\n// import AccountBoxSharpIcon from '@material-ui/icons/AccountBoxSharp';\r\nimport EmojiEmotionsSharpIcon from '@material-ui/icons/EmojiEmotionsSharp';\r\n\r\nimport './Sidebar.css'\r\n\r\nclass Sidebar extends Component\r\n{\r\n    render()\r\n    {\r\n        return(\r\n            <div className=\"sidebar\">\r\n               <div className=\"sidebar__intro\">\r\n                   <EmojiEmotionsSharpIcon/>\r\n                   <p>Hi Buddy</p>   \r\n                </div>\r\n                <div className=\"sidebar__list\">\r\n                    <Sidebarlist/>\r\n                      \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Sidebar;","import React, { Component } from 'react';\r\nimport StarHalfIcon from '@material-ui/icons/StarHalf';\r\n\r\nimport './DetailBg.css'\r\n\r\nclass DetailBg extends Component{\r\n    render()\r\n    {\r\n        return(\r\n            <div className=\"detailbg\">\r\n                <div className=\"detailbg__banner\">\r\n                    <p>To-Do</p>\r\n                    <StarHalfIcon/>\r\n                </div>\r\n                <div className=\"\">\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DetailBg;","import React, { Component } from 'react';\r\nimport DetailBg from './DetailBg'\r\nimport './Details.css'\r\n\r\nclass Detail extends Component{\r\n    render()\r\n    {\r\n        return(\r\n            <div className=\"details\">\r\n                <DetailBg/>\r\n            </div>  \r\n        )\r\n    }\r\n}\r\n\r\nexport default Detail;","import React from 'react';\nimport Sidebar from './Components/sidebar/Sidebar'\nimport Details from './Components/details/Details'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Sidebar/>\n      \n      {/* sideBar */}\n      <Details/>\n      {/* details */}\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}