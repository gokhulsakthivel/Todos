{"version":3,"sources":["Components/sidebar/Sidebar.js","Components/sidebar/sidebarArray.js","Services/firebase.js","Components/details/DetailBg.js","Components/details/DetailItem.js","Components/details/Details.js","Components/sidebar/Sidebaritem.js","Components/sidebar/Sidebarlist.js","App.js","serviceWorker.js","index.js"],"names":["Sidebar","state","name","this","props","changeFunction","sidebarBG","theme","backgroundColor","style","className","children","Component","sidebarArray","active","id","icon","listName","list","listCount","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","db","firestore","auth","DetailBg","text","onClick","setTheme","DetailItem","changeCheckItem","indexOfListChecked","ind","changeChecked","deleteItem","deleteCheckedListItem","isChecked","textDecoration","texts","Detail","array","displaySidebar","document","getElementsByClassName","ham","display","top","bottom","deleteCheckedlist","indexOfListCheck","activeId","map","items","collection","doc","get","then","snapshot","docs","value","tempArray","data","listCheck","splice","tempArrayList","update","console","log","changeCheckedlist","tempValue","addListTodos","input","getElementById","templist","push","templistCheck","index","item","key","title","type","placeholder","Sidebaritem","hoverOnEffect","e","target","background","hoverOffEffect","color","Math","floor","random","act","onMouseEnter","onMouseLeave","activeFunction","count","Sidebarlist","styl","val","list_Name","storeListName","event","setState","changeActiveState","setFunction","addElementHandler","slice","setId","length","add","changeInputValue","onFocusInputHandler","onBlurInputHandler","onFocus","onBlur","onKeyPress","onChange","App","isLightTheme","body","myList","getElementsByTagName","i","changeTheme","setOfflineArray","userDoc","listnamesDoc","sort","a","b","catch","error","tempName","Name","lightTheme","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.2156d4db.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\n// import {db} from '../../Services/firebase'\r\n// import Sidebarlist from './Sidebarlist'\r\n// import AccountBoxSharpIcon from '@material-ui/icons/AccountBoxSharp';\r\n// import EmojiEmotionsSharpIcon from '@material-ui/icons/EmojiEmotionsSharp';\r\n\r\nimport './Sidebar.css'\r\n\r\nclass Sidebar extends Component\r\n{\r\n    state = {\r\n        name : \"Buddy\"\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.changeFunction();\r\n    }\r\n\r\n    render()\r\n    {\r\n        // console.log(this.props.children)\r\n        var sidebarBG = {}\r\n        if(!this.props.theme){\r\n            // console.log(\"light\")\r\n            sidebarBG = { backgroundColor : \"rgba(255,255,255,0.6)\"}\r\n            // sidebarBG = { backgroundColor : \"rgba(255,255,255,0.8)\",}\r\n        }\r\n        else{\r\n            sidebarBG = { backgroundColor : \"rgba(44,44,44,0.8)\"}\r\n        }\r\n        return(\r\n            <div style={sidebarBG} className=\"sidebar\">\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Sidebar;","\r\n\r\nlet sidebarArray = [\r\n    {\r\n        active : true,\r\n        id : 1,\r\n        icon : 'WbSunnySharpIcon',\r\n        listName : 'My Day',\r\n        list : [],\r\n        listCount : 0\r\n    },\r\n    {\r\n        active : false,\r\n        id : 2,\r\n        icon : 'HomeSharpIcon',\r\n        listName : 'To-Do',\r\n        list : ['a','c'],\r\n        listCount : 0\r\n    },\r\n    {\r\n        active : false,\r\n        id : 3,\r\n        icon : 'LocalGroceryStoreSharpIcon',\r\n        listName : 'Grocery',\r\n        list : [],\r\n        listCount : 0\r\n        \r\n    },\r\n    {\r\n        active : false,\r\n        id : 4,\r\n        icon : 'ListSharpIcon',\r\n        listName : 'Others',\r\n        list : [],\r\n        listCount : 0\r\n    }\r\n];\r\n\r\n\r\nexport default sidebarArray;","import firebase, { firestore } from 'firebase';\r\nimport 'firebase/auth'\r\nimport 'firebase/database'\r\nimport 'firebase/analytics'\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDgSlT3R2-b3ttE8S2noFpPhlO3qqxJdkY\",\r\n    authDomain: \"todos-703b1.firebaseapp.com\",\r\n    databaseURL: \"https://todos-703b1.firebaseio.com\",\r\n    projectId: \"todos-703b1\",\r\n    storageBucket: \"todos-703b1.appspot.com\",\r\n    messagingSenderId: \"667809366567\",\r\n    appId: \"1:667809366567:web:e08827c505d0dfe5e3c402\",\r\n    measurementId: \"G-HR95GHMLEN\"\r\n  };\r\n  // Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();\r\n\r\nexport const db = firebase.firestore();\r\nexport const auth = firebase.auth();\r\n\r\nexport default firebase;   ","import React, { Component } from 'react';\r\nimport StarHalfIcon from '@material-ui/icons/StarHalf';\r\n\r\nimport './DetailBg.css'\r\n\r\nclass DetailBg extends Component{\r\n    render()\r\n    {\r\n        return(\r\n            <div className=\"detailbg\">\r\n                <div className=\"detailbg__banner\">\r\n                    <p>{this.props.text}</p>\r\n                    <StarHalfIcon onClick={this.props.setTheme}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DetailBg;","import React, { Component } from 'react';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport './DetailItem.css'\r\n\r\nclass DetailItem extends Component{\r\n\r\n    changeCheckItem = () =>{\r\n        var indexOfListChecked = this.props.ind;\r\n        this.props.changeChecked(indexOfListChecked)\r\n    }\r\n\r\n    deleteItem = () =>{\r\n        var indexOfListChecked = this.props.ind;\r\n        this.props.deleteCheckedListItem(indexOfListChecked)\r\n    }\r\n\r\n    render(){\r\n        // console.log(this.props);\r\n        \r\n        let style = this.props.isChecked ? {textDecoration : \"line-through\"} : {textDecoration : \"none\"};\r\n        return(\r\n\r\n            <div className=\"detailItem\">\r\n                <div className=\"detailitem__check\">\r\n                    {this.props.isChecked ? <CheckBoxIcon onClick={this.changeCheckItem} /> : <CheckBoxOutlineBlankIcon onClick={this.changeCheckItem} />}\r\n                    <p style={style}>{this.props.texts}</p>\r\n                </div>\r\n                <div className=\"detailItem__delete\">\r\n                    <DeleteIcon onClick={this.deleteItem}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DetailItem;\r\n","import React, { Component } from 'react';\r\nimport sidebarArray from '../sidebar/sidebarArray'\r\nimport {db} from '../../Services/firebase'\r\nimport DetailBg from './DetailBg'\r\nimport DetailItem from './DetailItem'\r\nimport './Details.css'\r\nimport BookSharpIcon from '@material-ui/icons/BookSharp';\r\nimport AddSharpIcon from '@material-ui/icons/AddSharp';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nclass Detail extends Component{\r\n\r\n    \r\n\r\n    state = {\r\n        array : sidebarArray,\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        // console.log(\"Mounted\", this.props.array, \"Details\");\r\n    }\r\n  \r\n    displaySidebar = () =>{\r\n        let list = document.getElementsByClassName(\"sidebar\");\r\n        let ham = document.getElementsByClassName(\"menuIcon\");\r\n        if(list[0].style.display === 'block'){\r\n            list[0].style.display = 'none';\r\n            ham[0].style.top = '10px';\r\n            ham[0].style.bottom = '10px';\r\n        }\r\n        else\r\n        {\r\n            list[0].style.display = 'block';\r\n            ham[0].style.top = '10px';\r\n            ham[0].style.bottom = '10px';\r\n        }\r\n    }\r\n\r\n\r\n    deleteCheckedlist = (indexOfListCheck) =>{\r\n        let activeId = 0;\r\n        this.props.array.map(items => {\r\n            if(items.active){\r\n                // console.log(\"Entered\",items.id)\r\n                activeId = items.id-1;\r\n            }\r\n        });\r\n\r\n        db.collection(\"users\").doc('iNIR1xqLjNNqpzMkuRJO').collection(\"listNames\").get()\r\n            .then(snapshot => {\r\n                snapshot.docs.map((value) => {\r\n\r\n                    var tempArray = value.data().listCheck;\r\n                    tempArray.splice(indexOfListCheck, 1)\r\n\r\n                    var tempArrayList = value.data().list;\r\n                    tempArrayList.splice(indexOfListCheck, 1)\r\n                    \r\n                    value.data().id === activeId+1 ?\r\n                    // console.log(value.data().id,value.data().listCheck[indexOfListCheck]),\r\n                    db.collection(\"users\").doc('iNIR1xqLjNNqpzMkuRJO').collection(\"listNames\").doc(value.id).update({\r\n                        listCheck : tempArray,\r\n                        list : tempArrayList\r\n                    }):console.log();\r\n\r\n                    return null;\r\n                })\r\n        })\r\n\r\n        this.props.changeFunction();\r\n    }\r\n\r\n    changeCheckedlist = (indexOfListCheck) =>{\r\n        let activeId = 0;\r\n        this.props.array.map(items => {\r\n            if(items.active){\r\n                // console.log(\"Entered\",items.id)\r\n                activeId = items.id-1;\r\n            }\r\n        });\r\n\r\n        db.collection(\"users\").doc('iNIR1xqLjNNqpzMkuRJO').collection(\"listNames\").get()\r\n            .then(snapshot => {\r\n                snapshot.docs.map((value) => {\r\n\r\n                    var tempValue = !value.data().listCheck[indexOfListCheck];\r\n                    var tempArray = value.data().listCheck;\r\n                    tempArray[indexOfListCheck] = tempValue\r\n                    \r\n                    value.data().id === activeId+1 ?\r\n                    // console.log(value.data().id,value.data().listCheck[indexOfListCheck]),\r\n                    db.collection(\"users\").doc('iNIR1xqLjNNqpzMkuRJO').collection(\"listNames\").doc(value.id).update({\r\n                        listCheck : tempArray,\r\n                    }):console.log();\r\n\r\n                    return null;\r\n                })\r\n        })\r\n        this.props.changeFunction();\r\n        // this.props.changeFunction();\r\n    }\r\n\r\n    addListTodos = () =>{\r\n        let activeId = 0;\r\n        this.props.array.map(items => {\r\n            if(items.active){\r\n                // console.log(\"Entered\",items.id)\r\n                activeId = items.id-1;\r\n            }\r\n        });\r\n\r\n        var input = document.getElementById('details__input').value;\r\n\r\n        var templist = this.props.array[activeId].list;\r\n        templist.push(input)\r\n        var templistCheck = this.props.array[activeId].listCheck;\r\n        templistCheck.push(false)\r\n        \r\n        db.collection(\"users\").doc('iNIR1xqLjNNqpzMkuRJO').collection(\"listNames\").get()\r\n            .then(snapshot => {\r\n                snapshot.docs.map((value) => {\r\n                    \r\n                    // console.log(templistCheck,templist,input);\r\n                    // console.log(activeId,\"id\",value.data().id);\r\n                    value.data().id === activeId+1 ?\r\n                    db.collection(\"users\").doc('iNIR1xqLjNNqpzMkuRJO').collection(\"listNames\").doc(value.id).update({\r\n                        list : templist,\r\n                        listCheck : templistCheck\r\n                    }):\r\n                    console.log(\"none\");\r\n                    // value.update\r\n                    return null;\r\n                })\r\n        })\r\n        document.getElementById('details__input').value = \"\";\r\n        this.props.changeFunction();\r\n    }\r\n\r\n\r\n    render()\r\n    {\r\n        // this.props.changeFunction();\r\n        let list = this.props.array.map((items =>{\r\n            // console.log(items);\r\n            var index = 0;\r\n            if(items.active){\r\n                return items.list.map((item)=>{\r\n                    index += 1;\r\n                    return <DetailItem deleteCheckedListItem={this.deleteCheckedlist} changeChecked={this.changeCheckedlist} texts={item} ind={index-1} key={index-1} isChecked={items.listCheck[index-1]}/>\r\n                })\r\n            }\r\n        }))\r\n\r\n        let title = this.props.array.map(items => {\r\n            if(items.active){\r\n                return items.listName;\r\n            }\r\n        }) \r\n\r\n        return(\r\n            <div className=\"details\" >\r\n                <MenuIcon className=\"menuIcon\" onClick={this.displaySidebar}/>\r\n                <div >\r\n                    <DetailBg setTheme={this.props.setTheme} theme={this.props.theme} text={title}/>\r\n                </div>  \r\n                {list}\r\n                <div className=\"details__newList\">\r\n                    <div className=\"details__add\" >\r\n                        <AddSharpIcon/>\r\n                        <input \r\n                                type=\"text\" \r\n                                id=\"details__input\" \r\n                                // onFocus={this.onFocusInputHandler} \r\n                                // onBlur={(event) => this.onBlurInputHandler(event)}\r\n                                // onKeyPress={this.add}\r\n                                // onChange={(event) => this.storeListName(event)}  \r\n                                // value={this.state.val}  \r\n                                placeholder=\"Unanmed List\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"details__submitIcon\">\r\n                        <BookSharpIcon  \r\n                                onClick={this.addListTodos} \r\n                                // style={this.state.styl}\r\n                        />\r\n                        {/* <BookmarkBorderSharpIcon/> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Detail;","import React, { Component } from 'react';\r\n\r\nimport WbSunnySharpIcon from '@material-ui/icons/WbSunnySharp';\r\nimport HomeSharpIcon from '@material-ui/icons/HomeSharp';\r\nimport FitnessCenterSharpIcon from '@material-ui/icons/FitnessCenterSharp';\r\nimport LocalGroceryStoreSharpIcon from '@material-ui/icons/LocalGroceryStoreSharp';\r\nimport ListSharpIcon from '@material-ui/icons/ListSharp';\r\n\r\nimport './Sidebaritem.css'\r\n\r\nclass Sidebaritem extends Component\r\n{\r\n\r\n\r\n    hoverOnEffect = (e) =>{\r\n        if(!this.props.active && e.target.className === \"Sidebaritem\") {\r\n            if(!this.props.theme){\r\n                e.target.style.background = 'lightgray';\r\n                // document.getElementsByClassName(\"Sidebaritem\")[0].style.background = 'lightgray';\r\n            }\r\n            else{\r\n                e.target.style.background = 'rgb(89, 89, 89)';\r\n                // document.getElementsByClassName(\"Sidebaritem\")[3].style.background = 'rgb(89, 89, 89)';\r\n            }\r\n        }\r\n    }\r\n    \r\n    hoverOffEffect = (e) =>{\r\n        if(!this.props.active) {\r\n            if(!this.props.theme){\r\n                e.target.style.background = 'none'; \r\n                document.getElementsByClassName(\"Sidebaritem\")[this.props.index].style.backgroundColor = \"none\";\r\n            }\r\n            else{\r\n                e.target.style.background = 'none';\r\n                document.getElementsByClassName(\"Sidebaritem\")[this.props.index].style.backgroundColor = \"none\";\r\n            }\r\n        }\r\n    }\r\n\r\n    render()\r\n    {\r\n        // iconName = this\r\n        // const icon = this.props.icon;\r\n        var r = Math.floor((Math.random() * 255) + 1);\r\n        var g = Math.floor((Math.random() * 255) + 1);\r\n        var b = Math.floor((Math.random() * 255) + 1);\r\n        const style = {\r\n            color : 'rgb('+r+','+g+','+b+')'\r\n        }\r\n        var act = {}; \r\n        if(this.props.active) {\r\n            if(!this.props.theme){\r\n                act = {\r\n                    backgroundColor : \"lightgray\",    \r\n                }\r\n            }\r\n            else{\r\n                act = {\r\n                    backgroundColor : \" rgb(89, 89, 89)\",    \r\n                }\r\n            }\r\n            \r\n        }\r\n\r\n        // console.log(this.props.index,\"sidebarItem\");\r\n        \r\n        return(\r\n            <div className=\"Sidebaritem\" \r\n                onMouseEnter={this.hoverOnEffect}  \r\n                onMouseLeave={this.hoverOffEffect}      \r\n                style={act} \r\n                onClick={this.props.activeFunction}\r\n            >\r\n                <div className=\"sidebaritem__left\">\r\n                    {\r\n                        this.props.icon === 'WbSunnySharpIcon' ? <WbSunnySharpIcon style={style}/> :\r\n                        this.props.icon === 'HomeSharpIcon' ? <HomeSharpIcon style={style}/> :\r\n                        this.props.icon === 'FitnessCenterSharpIcon' ? <FitnessCenterSharpIcon style={style}/> :\r\n                        this.props.icon === 'LocalGroceryStoreSharpIcon' ? <LocalGroceryStoreSharpIcon style={style}/> :\r\n                        <ListSharpIcon style={style}/>\r\n                    }\r\n                    <p>{this.props.name}</p>\r\n                    {/* <p>{this.props.count}</p> */}\r\n                </div>\r\n                <div className=\"sidebaritem__right\">\r\n                    {\r\n                        // this.props.count === '0' ? null :\r\n                        <p>{this.props.count}</p>\r\n                    }\r\n                    \r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Sidebaritem;","import React ,{Component} from 'react'\r\n// import Sidebar from './Sidebar'\r\nimport Sidebaritem from './Sidebaritem'\r\n// import sidebarArray from './sidebarArray'\r\nimport {db} from '../../Services/firebase'\r\n// import './sidebarlistfunctions'\r\nimport AddSharpIcon from '@material-ui/icons/AddSharp';\r\n// import BookmarkBorderSharpIcon from '@material-ui/icons/BookmarkBorderSharp';\r\n// import AddCircleSharpIcon from '@material-ui/icons/AddCircleSharp';\r\nimport BookSharpIcon from '@material-ui/icons/BookSharp';\r\n\r\n\r\nimport './Sidebarlist.css'\r\n\r\nclass Sidebarlist extends Component\r\n{\r\n\r\n    state = {\r\n        // array : this.props.array,\r\n        styl : {display:'none'},\r\n        val : \"NewList\",\r\n        list_Name : \"\", \r\n    }\r\n    \r\n    componentDidMount()\r\n    {\r\n        \r\n    }\r\n\r\n\r\n    storeListName = (event) =>{\r\n        this.setState({\r\n            val : event.target.value\r\n        })\r\n    }\r\n\r\n\r\n    changeActiveState = (id) =>{\r\n\r\n        db.collection(\"users\").doc('iNIR1xqLjNNqpzMkuRJO').collection(\"listNames\").get()\r\n            .then(snapshot => {\r\n                snapshot.docs.map((value) => {\r\n                    // console.log(value.data().active,value.data().listName);\r\n                    // console.log(value.id);\r\n                    value.data().id === id ?\r\n                    db.collection(\"users\").doc('iNIR1xqLjNNqpzMkuRJO').collection(\"listNames\").doc(value.id).update({\r\n                        active : true\r\n                    }):\r\n                    db.collection(\"users\").doc('iNIR1xqLjNNqpzMkuRJO').collection(\"listNames\").doc(value.id).update({\r\n                        active : false\r\n                    });\r\n                    // value.update\r\n                    return null;\r\n                })\r\n        })\r\n        this.props.setFunction();\r\n        // console.log(this.props.array)\r\n        this.setState({\r\n            array : this.props.array\r\n        })\r\n\r\n    }\r\n\r\n\r\n    addElementHandler = () =>{\r\n        //alert(\"entered\")\r\n        let tempArray = this.props.array.slice();\r\n        var setId = this.props.array[tempArray.length-1].id + 1;\r\n        let listName = document.getElementById(\"sidebar__input\").value;\r\n        // let listName = event.targetr.value;\r\n        \r\n        document.getElementById(\"sidebar__input\").value = ''\r\n        // console.log(listName)\r\n        tempArray.push({\r\n            active : true,\r\n            id : setId,\r\n            icon : 'ListSharpIcon',\r\n            listName : listName,\r\n            list : [],\r\n            listCheck:[],\r\n            listCount : 0\r\n        });\r\n        if(listName !== ''){\r\n        // console.log(tempArray)}\r\n        db.collection(\"users\").doc('iNIR1xqLjNNqpzMkuRJO').collection(\"listNames\")\r\n            .add({\r\n                active : true,\r\n                id : setId,\r\n                icon : 'ListSharpIcon',\r\n                listName : listName,\r\n                list : [],\r\n                listCheck:[],\r\n                listCount : 0\r\n            })\r\n        this.setState({\r\n            array : tempArray\r\n        })\r\n        }\r\n        this.changeInputValue();\r\n        this.setState({\r\n            styl:{display:'none'}\r\n        })\r\n        this.changeActiveState(tempArray.length);\r\n        // this.props.changeFunction();\r\n        \r\n    }\r\n\r\n    onFocusInputHandler = () =>{\r\n        this.changeInputValue();\r\n        this.setState({\r\n            styl:{}\r\n        })\r\n    }\r\n\r\n    onBlurInputHandler = (event) =>{\r\n        if(event.target.value === '')\r\n        {\r\n            this.changeInputValue();\r\n            this.setState({\r\n                styl:{display:'none'}\r\n            })\r\n        }\r\n    }\r\n\r\n    changeInputValue = () => {\r\n\r\n        this.state.val === 'NewList' ?\r\n        this.setState({\r\n            val : \"\"\r\n        }) :\r\n        this.setState({\r\n            val : \"NewList\"\r\n        })\r\n    }\r\n\r\n\r\n    \r\n\r\n\r\n\r\n    render()\r\n    {\r\n\r\n        let items = this.props.array.map((item,index) => {\r\n            //console.log(item);\r\n            return <Sidebaritem \r\n                            index = {index}\r\n                            theme={this.props.theme}\r\n                            key={item.id} \r\n                            name={item.listName} \r\n                            icon={item.icon} \r\n                            count={item.list.length}\r\n                            active={item.active}\r\n                            activeFunction={() => this.changeActiveState(item.id)}\r\n                    />\r\n        })\r\n        \r\n        return(\r\n            <div className=\"sidebarlist\">\r\n                {items}\r\n\r\n                <div className=\"sidebar__newList\">\r\n                    <div className=\"sidebar__add\" >\r\n                        <AddSharpIcon/>\r\n                        <input \r\n                                type=\"text\" \r\n                                id=\"sidebar__input\" \r\n                                onFocus={this.onFocusInputHandler} \r\n                                onBlur={(event) => this.onBlurInputHandler(event)}\r\n                                onKeyPress={this.add}\r\n                                onChange={(event) => this.storeListName(event)}  \r\n                                value={this.state.val}  \r\n                                placeholder=\"Unanmed List\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"sidebar__submitIcon\">\r\n                        <BookSharpIcon  \r\n                                onClick={this.addElementHandler} \r\n                                style={this.state.styl}\r\n                        />\r\n                        {/* <BookmarkBorderSharpIcon/> */}\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Sidebarlist;","import React, { Component } from 'react';\nimport Sidebar from './Components/sidebar/Sidebar'\nimport Details from './Components/details/Details'\n// import sidebarArray from './Components/sidebar/sidebarArray'\nimport {db} from './Services/firebase'\nimport './App.css';\nimport EmojiEmotionsSharpIcon from '@material-ui/icons/EmojiEmotionsSharp';\nimport Sidebarlist from './Components/sidebar/Sidebarlist'\n\nclass App extends Component {\n\n  state = {\n    array : [],\n    name : \"Buddy\",\n    isLightTheme : false\n  }\n\n  componentDidMount()\n  {\n      // console.log(\"Mounted\");\n      this.setOfflineArray();\n      \n      db.collection(\"users\").doc(\"iNIR1xqLjNNqpzMkuRJO\")\n            .get()\n            .then(snapshot => {\n                var tempName = (snapshot.data().Name);\n                var theme = (snapshot.data().lightTheme)\n                // console.log(tempName,theme)\n                if(tempName !== \"\"){\n                    this.setState({\n                        name : tempName,\n                        isLightTheme : theme\n                    });\n                }\n                \n            })\n            this.changeTheme();\n  }\n\n  setTheme = () =>{\n    if(!this.state.isLightTheme){\n      document.body.className = \"bodyDarkTheme\";\n      // document.getElementsByTagName(\"input\").className = \"inputDarkTheme\";\n      var myList = document.getElementsByTagName(\"input\");\n      for (var i = 0; i < myList.length; i++) {\n          myList[i].className = \"inputDarkTheme\";\n      }\n      // console.log(\"entered Theme\")\n    }\n    else{\n      document.body.className = \"bodyLightTheme\";\n      myList = document.getElementsByTagName(\"input\");\n      for (i = 0; i < myList.length; i++) {\n          myList[i].className = \"inputLightTheme\";\n      }\n    }\n  }\n\n  changeTheme = () =>{\n    db.collection(\"users\").doc('iNIR1xqLjNNqpzMkuRJO').update({\n      \"lightTheme\" : !this.state.isLightTheme\n    })\n    this.setState({\n      isLightTheme : !this.state.isLightTheme\n    })\n    this.setTheme()\n  }\n\n  setOfflineArray = () =>{\n    // console.log(\"entered\");\n    db.collection(\"users\")\n        .get()\n        .then( snapshot => {\n            snapshot.docs.map((userDoc) =>{\n                db.collection(\"users\").doc(userDoc['id']).collection(\"listNames\")\n                    .get()\n                    .then( snapshot =>{\n                        let tempArray = []\n                        snapshot.docs.map((listnamesDoc) => {\n                            tempArray.push(listnamesDoc.data())\n                        })\n                        tempArray.sort((a, b) => a.id - b.id);\n                        this.setState({\n                          array : tempArray\n                        })\n                        // console.log(this.state.array)\n                    })\n                    .catch(error =>console.log(error))\n            })\n        })\n        .catch(error => console.log(error))\n  }\n\n\n \n\n  render(){\n    \n    \n\n    return (\n      <div className=\"App\">\n        \n        {/* <Sidebar array={this.state.array} changeFunction={this.setOfflineArray}/> */}\n        <Sidebar theme={this.state.isLightTheme} array={this.state.array} changeFunction={this.setOfflineArray}>\n          <div className=\"sidebar__intro\">\n            <EmojiEmotionsSharpIcon/>\n            <p>Hi {this.state.name}</p>\n          </div>\n          <div className=\"sidebar__list\">\n              <Sidebarlist theme={this.state.isLightTheme} array={this.state.array} setFunction={this.setOfflineArray} changeFunction={this.setOfflineArray}/>\n          </div> \n        </Sidebar>\n\n        <Details setTheme={this.changeTheme} theme={this.state.isLightTheme} array={this.state.array} changeFunction={this.setOfflineArray}/> \n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}