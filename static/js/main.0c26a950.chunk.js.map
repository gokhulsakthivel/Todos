{"version":3,"sources":["Components/sidebar/Sidebaritem.js","Components/sidebar/sidebarArray.js","Components/sidebar/Sidebarlist.js","Components/sidebar/Sidebar.js","Components/details/DetailBg.js","Components/details/Details.js","App.js","serviceWorker.js","index.js"],"names":["Sidebaritem","style","color","Math","floor","random","className","this","props","icon","name","count","Component","sidebarArray","id","listName","list","listCount","Sidebarlist","state","array","styl","display","addElementHandler","event","tempArray","slice","document","getElementById","value","console","log","push","length","setState","changeStyleHandler","callFuntctionHandler","items","map","item","key","type","onClick","Sidebar","DetailBg","Detail","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0c26a950.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport WbSunnySharpIcon from '@material-ui/icons/WbSunnySharp';\r\nimport HomeSharpIcon from '@material-ui/icons/HomeSharp';\r\nimport FitnessCenterSharpIcon from '@material-ui/icons/FitnessCenterSharp';\r\nimport LocalGroceryStoreSharpIcon from '@material-ui/icons/LocalGroceryStoreSharp';\r\nimport ListSharpIcon from '@material-ui/icons/ListSharp';\r\n\r\nimport './Sidebaritem.css'\r\n\r\nclass Sidebaritem extends Component\r\n{\r\n    render()\r\n    {\r\n        // iconName = this\r\n        // const icon = this.props.icon;\r\n        var r = Math.floor((Math.random() * 255) + 1);\r\n        var g = Math.floor((Math.random() * 255) + 1);\r\n        var b = Math.floor((Math.random() * 255) + 1);\r\n        const style = {\r\n            color : 'rgb('+r+','+g+','+b+')'\r\n        }\r\n        return(\r\n            <div className=\"Sidebaritem\">\r\n                <div className=\"sidebaritem__left\">\r\n                    {\r\n                        this.props.icon === 'WbSunnySharpIcon' ? <WbSunnySharpIcon style={style}/> :\r\n                        this.props.icon === 'HomeSharpIcon' ? <HomeSharpIcon style={style}/> :\r\n                        this.props.icon === 'FitnessCenterSharpIcon' ? <FitnessCenterSharpIcon style={style}/> :\r\n                        this.props.icon === 'LocalGroceryStoreSharpIcon' ? <LocalGroceryStoreSharpIcon style={style}/> :\r\n                        <ListSharpIcon style={style}/>\r\n                    }\r\n                    <p>{this.props.name}</p>\r\n                    {/* <p>{this.props.count}</p> */}\r\n                </div>\r\n                <div className=\"sidebaritem__right\">\r\n                    {\r\n                        this.props.count === '0' ? null :\r\n                        <p>{this.props.count}</p>\r\n                    }\r\n                    \r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Sidebaritem;","\r\n\r\nlet sidebarArray = [\r\n    {\r\n        id : 1,\r\n        icon : 'WbSunnySharpIcon',\r\n        listName : 'My Day',\r\n        list : [],\r\n        listCount : '0',\r\n    },\r\n    {\r\n        id : 2,\r\n        icon : 'HomeSharpIcon',\r\n        listName : 'To-Do',\r\n        list : [],\r\n        listCount : '0',\r\n    },\r\n    {\r\n        id : 3,\r\n        icon : 'LocalGroceryStoreSharpIcon',\r\n        listName : 'Grocery',\r\n        list : [],\r\n        listCount : '0',\r\n        \r\n    },\r\n    {\r\n        id : 4,\r\n        icon : 'ListSharpIcon',\r\n        listName : 'Others',\r\n        list : [],\r\n        listCount : '0',\r\n    }\r\n];\r\n\r\n\r\nexport default sidebarArray;","import React ,{Component} from 'react'\r\n// import Sidebar from './Sidebar'\r\nimport Sidebaritem from './Sidebaritem'\r\nimport sidebarArray from './sidebarArray'\r\n\r\nimport AddSharpIcon from '@material-ui/icons/AddSharp';\r\nimport AddCircleSharpIcon from '@material-ui/icons/AddCircleSharp';\r\n\r\nimport './Sidebarlist.css'\r\n\r\nclass Sidebarlist extends Component\r\n{\r\n\r\n    state = {\r\n        array : sidebarArray,\r\n        styl : {display:'none'}\r\n    }\r\n\r\n    \r\n\r\n    addElementHandler = (event) =>{\r\n        let tempArray = this.state.array.slice();\r\n        let listName = document.getElementById(\"sidebar__input\").value;\r\n        document.getElementById(\"sidebar__input\").value = ''\r\n        console.log(listName)\r\n        tempArray.push({\r\n            id : tempArray.length+1,\r\n            icon : 'ListSharpIcon',\r\n            listName : listName,\r\n            listCount : '0',\r\n        });\r\n        console.log(tempArray)\r\n        this.setState({\r\n            array : tempArray\r\n        })\r\n    }\r\n\r\n       \r\n    changeStyleHandler = () =>{\r\n        const disp = this.state.styl.display;\r\n        \r\n        if(disp === 'none'){\r\n            this.setState({\r\n                styl:{}\r\n            })\r\n        }\r\n        else{\r\n            this.setState({\r\n                styl:{display:'none'}\r\n            })\r\n        }\r\n    }\r\n\r\n    callFuntctionHandler = () =>{\r\n        this.addElementHandler();\r\n        this.changeStyleHandler();\r\n    }\r\n\r\n    render()\r\n    {\r\n\r\n        let items = this.state.array.map((item) => {\r\n            return <Sidebaritem key={item.id} name={item.listName} icon={item.icon} count={item.listCount}/>\r\n        })\r\n        return(\r\n            // this.sidebarArray.map((item) => {\r\n            //     return <Sidebaritem name={item.listName} icon={item.icon} count={item.count}/>\r\n            // })\r\n            <div>\r\n                {items}\r\n                <div className=\"sidebar__addInput\" style={this.state.styl}  >\r\n                                              \r\n                        <input type=\"text\" id=\"sidebar__input\" />\r\n                        <AddCircleSharpIcon onClick={this.callFuntctionHandler}/>  \r\n                </div>\r\n                <div className=\"sidebar__add\" onClick={this.changeStyleHandler}>\r\n                        <AddSharpIcon/>\r\n                        <p>New List</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Sidebarlist;","import React, { Component } from 'react'\r\n\r\nimport Sidebarlist from './Sidebarlist'\r\n// import AccountBoxSharpIcon from '@material-ui/icons/AccountBoxSharp';\r\nimport EmojiEmotionsSharpIcon from '@material-ui/icons/EmojiEmotionsSharp';\r\n\r\nimport './Sidebar.css'\r\n\r\nclass Sidebar extends Component\r\n{\r\n    render()\r\n    {\r\n        return(\r\n            <div className=\"sidebar\">\r\n               <div className=\"sidebar__intro\">\r\n                   <EmojiEmotionsSharpIcon/>\r\n                   <p>Hi Buddy</p>   \r\n                </div>\r\n                <div className=\"sidebar__list\">\r\n                    <Sidebarlist/>\r\n                      \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Sidebar;","import React, { Component } from 'react';\r\n\r\nimport './DetailBg.css'\r\n\r\nclass DetailBg extends Component{\r\n    render()\r\n    {\r\n        return(\r\n            <div className=\"detailbg\">\r\n                <p>To-Do</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DetailBg;","import React, { Component } from 'react';\r\nimport DetailBg from './DetailBg'\r\nimport './Details.css'\r\n\r\nclass Detail extends Component{\r\n    render()\r\n    {\r\n        return(\r\n            <div className=\"details\">\r\n                <DetailBg/>\r\n            </div>  \r\n        )\r\n    }\r\n}\r\n\r\nexport default Detail;","import React from 'react';\nimport Sidebar from './Components/sidebar/Sidebar'\nimport Details from './Components/details/Details'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Sidebar/>\n      \n      {/* sideBar */}\n      <Details/>\n      {/* details */}\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}