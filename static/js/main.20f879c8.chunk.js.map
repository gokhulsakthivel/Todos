{"version":3,"sources":["Services/firebase.js","Components/sidebar/Sidebaritem.js","Components/sidebar/Sidebarlist.js","Components/sidebar/Sidebar.js","Components/sidebar/sidebarArray.js","Components/details/DetailBg.js","Components/details/DetailItem.js","Components/details/Details.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","db","firestore","auth","Sidebaritem","hoverOnEffect","e","props","active","target","className","theme","style","background","hoverOffEffect","document","getElementsByClassName","index","backgroundColor","color","Math","floor","random","act","this","onMouseEnter","onMouseLeave","onClick","activeFunction","icon","name","count","Component","Sidebarlist","state","styl","display","val","list_Name","storeListName","event","setState","value","changeActiveState","id","collection","doc","get","then","snapshot","docs","map","data","update","setFunction","array","addElementHandler","tempArray","slice","listName","getElementById","push","length","list","listCheck","listCount","add","changeInputValue","onFocusInputHandler","onBlurInputHandler","items","item","key","type","onFocus","onBlur","onKeyPress","onChange","placeholder","Sidebar","changeFunction","children","sidebarArray","DetailBg","text","setTheme","DetailItem","isChecked","textDecoration","texts","Detail","title","App","isLightTheme","body","myList","getElementsByTagName","i","changeTheme","setOfflineArray","userDoc","listnamesDoc","sort","a","b","catch","error","console","log","tempName","Name","lightTheme","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.20f879c8.chunk.js","sourcesContent":["import firebase, { firestore } from 'firebase';\r\nimport 'firebase/auth'\r\nimport 'firebase/database'\r\nimport 'firebase/analytics'\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDgSlT3R2-b3ttE8S2noFpPhlO3qqxJdkY\",\r\n    authDomain: \"todos-703b1.firebaseapp.com\",\r\n    databaseURL: \"https://todos-703b1.firebaseio.com\",\r\n    projectId: \"todos-703b1\",\r\n    storageBucket: \"todos-703b1.appspot.com\",\r\n    messagingSenderId: \"667809366567\",\r\n    appId: \"1:667809366567:web:e08827c505d0dfe5e3c402\",\r\n    measurementId: \"G-HR95GHMLEN\"\r\n  };\r\n  // Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();\r\n\r\nexport const db = firebase.firestore();\r\nexport const auth = firebase.auth();\r\n\r\nexport default firebase;   ","import React, { Component } from 'react';\r\n\r\nimport WbSunnySharpIcon from '@material-ui/icons/WbSunnySharp';\r\nimport HomeSharpIcon from '@material-ui/icons/HomeSharp';\r\nimport FitnessCenterSharpIcon from '@material-ui/icons/FitnessCenterSharp';\r\nimport LocalGroceryStoreSharpIcon from '@material-ui/icons/LocalGroceryStoreSharp';\r\nimport ListSharpIcon from '@material-ui/icons/ListSharp';\r\n\r\nimport './Sidebaritem.css'\r\n\r\nclass Sidebaritem extends Component\r\n{\r\n\r\n\r\n    hoverOnEffect = (e) =>{\r\n        if(!this.props.active && e.target.className === \"Sidebaritem\") {\r\n            if(!this.props.theme){\r\n                e.target.style.background = 'lightgray';\r\n                // document.getElementsByClassName(\"Sidebaritem\")[0].style.background = 'lightgray';\r\n            }\r\n            else{\r\n                e.target.style.background = 'rgb(89, 89, 89)';\r\n                // document.getElementsByClassName(\"Sidebaritem\")[3].style.background = 'rgb(89, 89, 89)';\r\n            }\r\n        }\r\n    }\r\n    \r\n    hoverOffEffect = (e) =>{\r\n        if(!this.props.active) {\r\n            if(!this.props.theme){\r\n                e.target.style.background = 'none'; \r\n                document.getElementsByClassName(\"Sidebaritem\")[this.props.index].style.backgroundColor = \"none\";\r\n            }\r\n            else{\r\n                e.target.style.background = 'none';\r\n                document.getElementsByClassName(\"Sidebaritem\")[this.props.index].style.backgroundColor = \"none\";\r\n            }\r\n        }\r\n    }\r\n\r\n    render()\r\n    {\r\n        // iconName = this\r\n        // const icon = this.props.icon;\r\n        var r = Math.floor((Math.random() * 255) + 1);\r\n        var g = Math.floor((Math.random() * 255) + 1);\r\n        var b = Math.floor((Math.random() * 255) + 1);\r\n        const style = {\r\n            color : 'rgb('+r+','+g+','+b+')'\r\n        }\r\n        var act = {}; \r\n        if(this.props.active) {\r\n            if(!this.props.theme){\r\n                act = {\r\n                    backgroundColor : \"lightgray\",    \r\n                }\r\n            }\r\n            else{\r\n                act = {\r\n                    backgroundColor : \" rgb(89, 89, 89)\",    \r\n                }\r\n            }\r\n            \r\n        }\r\n\r\n        // console.log(this.props.index,\"sidebarItem\");\r\n        \r\n        return(\r\n            <div className=\"Sidebaritem\" \r\n                onMouseEnter={this.hoverOnEffect}  \r\n                onMouseLeave={this.hoverOffEffect}      \r\n                style={act} \r\n                onClick={this.props.activeFunction}\r\n            >\r\n                <div className=\"sidebaritem__left\">\r\n                    {\r\n                        this.props.icon === 'WbSunnySharpIcon' ? <WbSunnySharpIcon style={style}/> :\r\n                        this.props.icon === 'HomeSharpIcon' ? <HomeSharpIcon style={style}/> :\r\n                        this.props.icon === 'FitnessCenterSharpIcon' ? <FitnessCenterSharpIcon style={style}/> :\r\n                        this.props.icon === 'LocalGroceryStoreSharpIcon' ? <LocalGroceryStoreSharpIcon style={style}/> :\r\n                        <ListSharpIcon style={style}/>\r\n                    }\r\n                    <p>{this.props.name}</p>\r\n                    {/* <p>{this.props.count}</p> */}\r\n                </div>\r\n                <div className=\"sidebaritem__right\">\r\n                    {\r\n                        // this.props.count === '0' ? null :\r\n                        <p>{this.props.count}</p>\r\n                    }\r\n                    \r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Sidebaritem;","import React ,{Component} from 'react'\r\n// import Sidebar from './Sidebar'\r\nimport Sidebaritem from './Sidebaritem'\r\n// import sidebarArray from './sidebarArray'\r\nimport {db} from '../../Services/firebase'\r\n// import './sidebarlistfunctions'\r\nimport AddSharpIcon from '@material-ui/icons/AddSharp';\r\n// import BookmarkBorderSharpIcon from '@material-ui/icons/BookmarkBorderSharp';\r\n// import AddCircleSharpIcon from '@material-ui/icons/AddCircleSharp';\r\nimport BookSharpIcon from '@material-ui/icons/BookSharp';\r\n\r\n\r\nimport './Sidebarlist.css'\r\n\r\nclass Sidebarlist extends Component\r\n{\r\n\r\n    state = {\r\n        // array : this.props.array,\r\n        styl : {display:'none'},\r\n        val : \"NewList\",\r\n        list_Name : \"\", \r\n    }\r\n    \r\n    componentDidMount()\r\n    {\r\n        \r\n    }\r\n\r\n\r\n    storeListName = (event) =>{\r\n        this.setState({\r\n            val : event.target.value\r\n        })\r\n    }\r\n\r\n\r\n    changeActiveState = (id) =>{\r\n\r\n        db.collection(\"users\").doc('iNIR1xqLjNNqpzMkuRJO').collection(\"listNames\").get()\r\n            .then(snapshot => {\r\n                snapshot.docs.map((value) => {\r\n                    // console.log(value.data().active,value.data().listName);\r\n                    // console.log(value.id);\r\n                    value.data().id === id ?\r\n                    db.collection(\"users\").doc('iNIR1xqLjNNqpzMkuRJO').collection(\"listNames\").doc(value.id).update({\r\n                        active : true\r\n                    }):\r\n                    db.collection(\"users\").doc('iNIR1xqLjNNqpzMkuRJO').collection(\"listNames\").doc(value.id).update({\r\n                        active : false\r\n                    });\r\n                    // value.update\r\n                    return null;\r\n                })\r\n        })\r\n        this.props.setFunction();\r\n        // console.log(this.props.array)\r\n        this.setState({\r\n            array : this.props.array\r\n        })\r\n\r\n    }\r\n\r\n\r\n    addElementHandler = () =>{\r\n        //alert(\"entered\")\r\n        let tempArray = this.props.array.slice();\r\n        let listName = document.getElementById(\"sidebar__input\").value;\r\n        // let listName = event.targetr.value;\r\n        \r\n        document.getElementById(\"sidebar__input\").value = ''\r\n        // console.log(listName)\r\n        tempArray.push({\r\n            active : true,\r\n            id : tempArray.length+1,\r\n            icon : 'ListSharpIcon',\r\n            listName : listName,\r\n            list : [],\r\n            listCheck:[],\r\n            listCount : 0\r\n        });\r\n        if(listName !== ''){\r\n        // console.log(tempArray)}\r\n        db.collection(\"users\").doc('iNIR1xqLjNNqpzMkuRJO').collection(\"listNames\")\r\n            .add({\r\n                active : true,\r\n                id : tempArray.length,\r\n                icon : 'ListSharpIcon',\r\n                listName : listName,\r\n                list : [],\r\n                listCount : 0\r\n            })\r\n        this.setState({\r\n            array : tempArray\r\n        })\r\n        }\r\n        this.changeInputValue();\r\n        this.setState({\r\n            styl:{display:'none'}\r\n        })\r\n        this.changeActiveState(tempArray.length);\r\n        // this.props.changeFunction();\r\n        \r\n    }\r\n\r\n    onFocusInputHandler = () =>{\r\n        this.changeInputValue();\r\n        this.setState({\r\n            styl:{}\r\n        })\r\n    }\r\n\r\n    onBlurInputHandler = (event) =>{\r\n        if(event.target.value === '')\r\n        {\r\n            this.changeInputValue();\r\n            this.setState({\r\n                styl:{display:'none'}\r\n            })\r\n        }\r\n    }\r\n\r\n    changeInputValue = () => {\r\n\r\n        this.state.val === 'NewList' ?\r\n        this.setState({\r\n            val : \"\"\r\n        }) :\r\n        this.setState({\r\n            val : \"NewList\"\r\n        })\r\n    }\r\n\r\n\r\n    \r\n\r\n\r\n\r\n    render()\r\n    {\r\n\r\n        let items = this.props.array.map((item,index) => {\r\n            //console.log(item);\r\n            return <Sidebaritem \r\n                            index = {index}\r\n                            theme={this.props.theme}\r\n                            key={item.id} \r\n                            name={item.listName} \r\n                            icon={item.icon} \r\n                            count={item.list.length}\r\n                            active={item.active}\r\n                            activeFunction={() => this.changeActiveState(item.id)}\r\n                    />\r\n        })\r\n        \r\n        return(\r\n            <div className=\"sidebarlist\">\r\n                {items}\r\n\r\n                <div className=\"sidebar__newList\">\r\n                    <div className=\"sidebar__add\" >\r\n                        <AddSharpIcon/>\r\n                        <input \r\n                                type=\"text\" \r\n                                id=\"sidebar__input\" \r\n                                onFocus={this.onFocusInputHandler} \r\n                                onBlur={(event) => this.onBlurInputHandler(event)}\r\n                                onKeyPress={this.add}\r\n                                onChange={(event) => this.storeListName(event)}  \r\n                                value={this.state.val}  \r\n                                placeholder=\"Unanmed List\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"sidebar__submitIcon\">\r\n                        <BookSharpIcon  \r\n                                onClick={this.addElementHandler} \r\n                                style={this.state.styl}\r\n                        />\r\n                        {/* <BookmarkBorderSharpIcon/> */}\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Sidebarlist;","import React, { Children, Component } from 'react'\r\n\r\nimport {db} from '../../Services/firebase'\r\nimport Sidebarlist from './Sidebarlist'\r\n// import AccountBoxSharpIcon from '@material-ui/icons/AccountBoxSharp';\r\nimport EmojiEmotionsSharpIcon from '@material-ui/icons/EmojiEmotionsSharp';\r\n\r\nimport './Sidebar.css'\r\n\r\nclass Sidebar extends Component\r\n{\r\n    state = {\r\n        name : \"Buddy\"\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.changeFunction();\r\n    }\r\n\r\n    render()\r\n    {\r\n        // console.log(this.props.children)\r\n        return(\r\n            <div className=\"sidebar\">\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Sidebar;","\r\n\r\nlet sidebarArray = [\r\n    {\r\n        active : true,\r\n        id : 1,\r\n        icon : 'WbSunnySharpIcon',\r\n        listName : 'My Day',\r\n        list : [],\r\n        listCount : 0\r\n    },\r\n    {\r\n        active : false,\r\n        id : 2,\r\n        icon : 'HomeSharpIcon',\r\n        listName : 'To-Do',\r\n        list : ['a','c'],\r\n        listCount : 0\r\n    },\r\n    {\r\n        active : false,\r\n        id : 3,\r\n        icon : 'LocalGroceryStoreSharpIcon',\r\n        listName : 'Grocery',\r\n        list : [],\r\n        listCount : 0\r\n        \r\n    },\r\n    {\r\n        active : false,\r\n        id : 4,\r\n        icon : 'ListSharpIcon',\r\n        listName : 'Others',\r\n        list : [],\r\n        listCount : 0\r\n    }\r\n];\r\n\r\n\r\nexport default sidebarArray;","import React, { Component } from 'react';\r\nimport StarHalfIcon from '@material-ui/icons/StarHalf';\r\n\r\nimport './DetailBg.css'\r\n\r\nclass DetailBg extends Component{\r\n    render()\r\n    {\r\n        return(\r\n            <div className=\"detailbg\">\r\n                <div className=\"detailbg__banner\">\r\n                    <p>{this.props.text}</p>\r\n                    <StarHalfIcon onClick={this.props.setTheme}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DetailBg;","import React, { Component } from 'react';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport './DetailItem.css'\r\n\r\nclass DetailItem extends Component{\r\n    render(){\r\n        // console.log(this.props);\r\n        let style = this.props.isChecked ? {textDecoration : \"line-through\"} : null;\r\n        return(\r\n\r\n            <div className=\"detailItem\">\r\n                <div className=\"detailitem__check\">\r\n                    {this.props.isChecked ? <CheckBoxIcon/> : <CheckBoxOutlineBlankIcon/>}\r\n                    <p style={style}>{this.props.texts}</p>\r\n                </div>\r\n                <div className=\"detailItem__delete\">\r\n                    <DeleteIcon/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DetailItem;\r\n","import React, { Component } from 'react';\r\nimport sidebarArray from '../sidebar/sidebarArray'\r\n// import {db} from '../../Services/firebase'\r\nimport DetailBg from './DetailBg'\r\nimport DetailItem from './DetailItem'\r\nimport './Details.css'\r\nimport BookSharpIcon from '@material-ui/icons/BookSharp';\r\nimport AddSharpIcon from '@material-ui/icons/AddSharp';\r\n\r\nclass Detail extends Component{\r\n\r\n    \r\n\r\n    state = {\r\n        array : sidebarArray,\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        // console.log(\"Mounted\", this.props.array, \"Details\");\r\n    }\r\n\r\n    // setOfflineArray = () =>{\r\n    //     db.collection(\"users\")\r\n    //         .get()\r\n    //         .then( snapshot => {\r\n    //             snapshot.docs.map((userDoc) =>{\r\n    //                 // console.log(userDoc['id'])\r\n    //                 db.collection(\"users\").doc(userDoc['id']).collection(\"listNames\")\r\n    //                     .get()\r\n    //                     .then( snapshot =>{\r\n    //                         let tempArray = []\r\n    //                         snapshot.docs.map((listnamesDoc) => {\r\n    //                             tempArray.push(listnamesDoc.data())\r\n    //                         })\r\n    //                         this.setState({\r\n    //                             array:tempArray\r\n    //                         })\r\n    //                         // return null;\r\n    //                     })\r\n    //                     .catch(error =>console.log(error))\r\n    //             })\r\n    //             // return null;\r\n    //         })\r\n    //         .catch(error => console.log(error))\r\n    // }\r\n\r\n    \r\n\r\n\r\n    render()\r\n    {\r\n        // this.props.changeFunction();\r\n        let list = this.props.array.map((items =>{\r\n            // console.log(items);\r\n            var index = 0;\r\n            if(items.active){\r\n                return items.list.map((item)=>{\r\n                    index += 1;\r\n                    return <DetailItem texts={item} key={index} isChecked={items.listCheck[index-1]}/>\r\n                })\r\n            }\r\n        }))\r\n\r\n        let title = this.props.array.map(items => {\r\n            if(items.active){\r\n                return items.listName;\r\n            }\r\n        }) \r\n\r\n        return(\r\n            <div className=\"details\" >\r\n                <div >\r\n                    <DetailBg setTheme={this.props.setTheme} theme={this.props.theme} text={title}/>\r\n                </div>  \r\n                {list}\r\n                <div className=\"details__newList\">\r\n                    <div className=\"details__add\" >\r\n                        <AddSharpIcon/>\r\n                        <input \r\n                                // type=\"text\" \r\n                                // id=\"details__input\" \r\n                                // onFocus={this.onFocusInputHandler} \r\n                                // onBlur={(event) => this.onBlurInputHandler(event)}\r\n                                // onKeyPress={this.add}\r\n                                // onChange={(event) => this.storeListName(event)}  \r\n                                // value={this.state.val}  \r\n                                placeholder=\"Unanmed List\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"details__submitIcon\">\r\n                        <BookSharpIcon  \r\n                                // onClick={this.addElementHandler} \r\n                                // style={this.state.styl}\r\n                        />\r\n                        {/* <BookmarkBorderSharpIcon/> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Detail;","import React, { Component } from 'react';\nimport Sidebar from './Components/sidebar/Sidebar'\nimport Details from './Components/details/Details'\n// import sidebarArray from './Components/sidebar/sidebarArray'\nimport {db} from './Services/firebase'\nimport './App.css';\nimport EmojiEmotionsSharpIcon from '@material-ui/icons/EmojiEmotionsSharp';\nimport Sidebarlist from './Components/sidebar/Sidebarlist'\n\nclass App extends Component {\n\n  state = {\n    array : [],\n    name : \"Buddy\",\n    isLightTheme : true\n  }\n\n  componentDidMount()\n  {\n      // console.log(\"Mounted\");\n      this.setOfflineArray();\n      \n      db.collection(\"users\").doc(\"iNIR1xqLjNNqpzMkuRJO\")\n            .get()\n            .then(snapshot => {\n                var tempName = (snapshot.data().Name);\n                var theme = (snapshot.data().lightTheme)\n                // console.log(tempName,theme)\n                if(tempName !== \"\"){\n                    this.setState({\n                        name : tempName,\n                        isLightTheme : theme\n                    });\n                }\n                \n            })\n            this.changeTheme();\n  }\n\n  setTheme = () =>{\n    if(!this.state.isLightTheme){\n      document.body.className = \"bodyDarkTheme\";\n      // document.getElementsByTagName(\"input\").className = \"inputDarkTheme\";\n      var myList = document.getElementsByTagName(\"input\");\n      for (var i = 0; i < myList.length; i++) {\n          myList[i].className = \"inputDarkTheme\";\n      }\n      // console.log(\"entered Theme\")\n    }\n    else{\n      document.body.className = \"bodyLightTheme\";\n      myList = document.getElementsByTagName(\"input\");\n      for (i = 0; i < myList.length; i++) {\n          myList[i].className = \"inputLightTheme\";\n      }\n    }\n  }\n\n  changeTheme = () =>{\n    db.collection(\"users\").doc('iNIR1xqLjNNqpzMkuRJO').update({\n      \"lightTheme\" : !this.state.isLightTheme\n    })\n    this.setState({\n      isLightTheme : !this.state.isLightTheme\n    })\n    this.setTheme()\n  }\n\n  setOfflineArray = () =>{\n    // console.log(\"entered\");\n    db.collection(\"users\")\n        .get()\n        .then( snapshot => {\n            snapshot.docs.map((userDoc) =>{\n                db.collection(\"users\").doc(userDoc['id']).collection(\"listNames\")\n                    .get()\n                    .then( snapshot =>{\n                        let tempArray = []\n                        snapshot.docs.map((listnamesDoc) => {\n                            tempArray.push(listnamesDoc.data())\n                        })\n                        tempArray.sort((a, b) => a.id - b.id);\n                        this.setState({\n                          array : tempArray\n                        })\n                        // console.log(this.state.array)\n                    })\n                    .catch(error =>console.log(error))\n            })\n        })\n        .catch(error => console.log(error))\n\n        \n  }\n\n  render(){\n    \n    return (\n      <div className=\"App\">\n        \n        {/* <Sidebar array={this.state.array} changeFunction={this.setOfflineArray}/> */}\n        <Sidebar array={this.state.array} changeFunction={this.setOfflineArray}>\n          <div className=\"sidebar__intro\">\n            <EmojiEmotionsSharpIcon/>\n            <p>Hi {this.state.name}</p>\n          </div>\n          <div className=\"sidebar__list\">\n              <Sidebarlist theme={this.state.isLightTheme} array={this.state.array} setFunction={this.setOfflineArray} changeFunction={this.setOfflineArray}/>\n          </div> \n        </Sidebar>\n\n        <Details setTheme={this.changeTheme} theme={this.state.isLightTheme} array={this.state.array} changeFunction={this.setOfflineArray}/> \n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}