{"version":3,"sources":["Services/firebase.js","Components/sidebar/Sidebaritem.js","Components/sidebar/Sidebarlist.js","Components/sidebar/Sidebar.js","Components/sidebar/sidebarArray.js","Components/details/DetailBg.js","Components/details/DetailItem.js","Components/details/Details.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","db","firestore","auth","Sidebaritem","style","color","Math","floor","random","act","this","props","active","backgroundColor","className","onClick","activeFunction","icon","name","count","Component","Sidebarlist","state","styl","display","val","list_Name","storeListName","event","setState","target","value","changeActiveState","id","collection","doc","get","then","snapshot","docs","map","console","log","data","update","setFunction","array","addElementHandler","tempArray","slice","listName","document","getElementById","push","length","list","listCount","add","changeInputValue","onFocusInputHandler","onBlurInputHandler","items","item","key","type","onFocus","onBlur","onKeyPress","onChange","placeholder","Sidebar","changeFunction","children","sidebarArray","DetailBg","DetailItem","texts","Detail","setOfflineArray","userDoc","listnamesDoc","catch","error","App","sort","a","b","tempName","Name","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.2928fa35.chunk.js","sourcesContent":["import firebase, { firestore } from 'firebase';\r\nimport 'firebase/auth'\r\nimport 'firebase/database'\r\nimport 'firebase/analytics'\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDgSlT3R2-b3ttE8S2noFpPhlO3qqxJdkY\",\r\n    authDomain: \"todos-703b1.firebaseapp.com\",\r\n    databaseURL: \"https://todos-703b1.firebaseio.com\",\r\n    projectId: \"todos-703b1\",\r\n    storageBucket: \"todos-703b1.appspot.com\",\r\n    messagingSenderId: \"667809366567\",\r\n    appId: \"1:667809366567:web:e08827c505d0dfe5e3c402\",\r\n    measurementId: \"G-HR95GHMLEN\"\r\n  };\r\n  // Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();\r\n\r\nexport const db = firebase.firestore();\r\nexport const auth = firebase.auth();\r\n\r\nexport default firebase;   ","import React, { Component } from 'react';\r\n\r\nimport WbSunnySharpIcon from '@material-ui/icons/WbSunnySharp';\r\nimport HomeSharpIcon from '@material-ui/icons/HomeSharp';\r\nimport FitnessCenterSharpIcon from '@material-ui/icons/FitnessCenterSharp';\r\nimport LocalGroceryStoreSharpIcon from '@material-ui/icons/LocalGroceryStoreSharp';\r\nimport ListSharpIcon from '@material-ui/icons/ListSharp';\r\n\r\nimport './Sidebaritem.css'\r\n\r\nclass Sidebaritem extends Component\r\n{\r\n    render()\r\n    {\r\n        // iconName = this\r\n        // const icon = this.props.icon;\r\n        var r = Math.floor((Math.random() * 255) + 1);\r\n        var g = Math.floor((Math.random() * 255) + 1);\r\n        var b = Math.floor((Math.random() * 255) + 1);\r\n        const style = {\r\n            color : 'rgb('+r+','+g+','+b+')'\r\n        }\r\n        var act = {}; \r\n        if(this.props.active) {\r\n            act = {\r\n                backgroundColor : \"lightgray\"\r\n            }\r\n        }\r\n        \r\n        return(\r\n            <div className=\"Sidebaritem\" style={act} onClick={this.props.activeFunction}>\r\n                <div className=\"sidebaritem__left\">\r\n                    {\r\n                        this.props.icon === 'WbSunnySharpIcon' ? <WbSunnySharpIcon style={style}/> :\r\n                        this.props.icon === 'HomeSharpIcon' ? <HomeSharpIcon style={style}/> :\r\n                        this.props.icon === 'FitnessCenterSharpIcon' ? <FitnessCenterSharpIcon style={style}/> :\r\n                        this.props.icon === 'LocalGroceryStoreSharpIcon' ? <LocalGroceryStoreSharpIcon style={style}/> :\r\n                        <ListSharpIcon style={style}/>\r\n                    }\r\n                    <p>{this.props.name}</p>\r\n                    {/* <p>{this.props.count}</p> */}\r\n                </div>\r\n                <div className=\"sidebaritem__right\">\r\n                    {\r\n                        // this.props.count === '0' ? null :\r\n                        <p>{this.props.count}</p>\r\n                    }\r\n                    \r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Sidebaritem;","import React ,{Component} from 'react'\r\n// import Sidebar from './Sidebar'\r\nimport Sidebaritem from './Sidebaritem'\r\n// import sidebarArray from './sidebarArray'\r\nimport {db} from '../../Services/firebase'\r\n// import './sidebarlistfunctions'\r\nimport AddSharpIcon from '@material-ui/icons/AddSharp';\r\n// import BookmarkBorderSharpIcon from '@material-ui/icons/BookmarkBorderSharp';\r\n// import AddCircleSharpIcon from '@material-ui/icons/AddCircleSharp';\r\nimport BookSharpIcon from '@material-ui/icons/BookSharp';\r\n\r\n\r\nimport './Sidebarlist.css'\r\n\r\nclass Sidebarlist extends Component\r\n{\r\n\r\n    state = {\r\n        // array : this.props.array,\r\n        styl : {display:'none'},\r\n        val : \"NewList\",\r\n        list_Name : \"\",\r\n        // setFunction : this.props.setFunction.bind(this) \r\n    }\r\n    \r\n    componentDidMount()\r\n    {\r\n        console.log(this.props.array,\"Sidebarlist\");\r\n        this.props.setFunction();\r\n    }\r\n\r\n    // setOfflineArray = () =>{\r\n    //     db.collection(\"users\")\r\n    //         .get()\r\n    //         .then( snapshot => {\r\n    //             snapshot.docs.map((userDoc) =>{\r\n    //                 // console.log(userDoc['id'])\r\n    //                 db.collection(\"users\").doc(userDoc['id']).collection(\"listNames\")\r\n    //                     .get()\r\n    //                     .then( snapshot =>{\r\n    //                         let tempArray = []\r\n    //                         snapshot.docs.map((listnamesDoc) => {\r\n    //                             tempArray.push(listnamesDoc.data())\r\n    //                         })\r\n    //                         this.setState({\r\n    //                             array:tempArray\r\n    //                         })\r\n    //                         // return null;\r\n    //                     })\r\n    //                     .catch(error =>console.log(error))\r\n    //             })\r\n    //             // return null;\r\n    //         })\r\n    //         .catch(error => console.log(error))\r\n    // }\r\n\r\n    storeListName = (event) =>{\r\n        this.setState({\r\n            val : event.target.value\r\n        })\r\n    }\r\n\r\n\r\n    changeActiveState = (id) =>{\r\n        // var tempArray = this.state.array;\r\n        // tempArray.map((item) => {\r\n        //     // console.log(item.listName,id);\r\n        //     (item.id === id) ? \r\n        //     item.active = true : item.active = false;          \r\n        // })\r\n\r\n        db.collection(\"users\").doc('iNIR1xqLjNNqpzMkuRJO').collection(\"listNames\").get()\r\n            .then(snapshot => {\r\n                snapshot.docs.map((value) => {\r\n                    // console.log(value.data().active,value.data().listName);\r\n                    console.log(value.id);\r\n                    value.data().id === id ?\r\n                    db.collection(\"users\").doc('iNIR1xqLjNNqpzMkuRJO').collection(\"listNames\").doc(value.id).update({\r\n                        active : true\r\n                    }):\r\n                    db.collection(\"users\").doc('iNIR1xqLjNNqpzMkuRJO').collection(\"listNames\").doc(value.id).update({\r\n                        active : false\r\n                    });\r\n                    // value.update\r\n                    return null;\r\n                })\r\n        })\r\n        this.props.setFunction();\r\n        // console.log(this.props.array)\r\n        this.setState({\r\n            array : this.props.array\r\n        })\r\n\r\n    }\r\n\r\n\r\n    addElementHandler = () =>{\r\n        //alert(\"entered\")\r\n        let tempArray = this.props.array.slice();\r\n        let listName = document.getElementById(\"sidebar__input\").value;\r\n        // let listName = event.targetr.value;\r\n        \r\n        document.getElementById(\"sidebar__input\").value = ''\r\n        // console.log(listName)\r\n        tempArray.push({\r\n            active : true,\r\n            id : tempArray.length+1,\r\n            icon : 'ListSharpIcon',\r\n            listName : listName,\r\n            list : [],\r\n            listCount : 0\r\n        });\r\n        if(listName !== ''){\r\n        // console.log(tempArray)}\r\n        db.collection(\"users\").doc('iNIR1xqLjNNqpzMkuRJO').collection(\"listNames\")\r\n            .add({\r\n                active : true,\r\n                id : tempArray.length,\r\n                icon : 'ListSharpIcon',\r\n                listName : listName,\r\n                list : [],\r\n                listCount : 0\r\n            })\r\n        this.setState({\r\n            array : tempArray\r\n        })\r\n        }\r\n        this.changeInputValue();\r\n        this.setState({\r\n            styl:{display:'none'}\r\n        })\r\n        this.changeActiveState(tempArray.length);\r\n        // this.props.changeFunction();\r\n        \r\n    }\r\n\r\n    onFocusInputHandler = () =>{\r\n        this.changeInputValue();\r\n        this.setState({\r\n            styl:{}\r\n        })\r\n    }\r\n\r\n    onBlurInputHandler = (event) =>{\r\n        if(event.target.value === '')\r\n        {\r\n            this.changeInputValue();\r\n            this.setState({\r\n                styl:{display:'none'}\r\n            })\r\n        }\r\n    }\r\n\r\n    changeInputValue = () => {\r\n\r\n        this.state.val === 'NewList' ?\r\n        // console.log('focus'):console.log('blur')\r\n        this.setState({\r\n            val : \"\"\r\n        }) :\r\n        this.setState({\r\n            val : \"NewList\"\r\n        })\r\n    }\r\n\r\n\r\n    \r\n\r\n\r\n\r\n    render()\r\n    {\r\n\r\n        let items = this.props.array.map((item) => {\r\n            //console.log(item);\r\n            return <Sidebaritem \r\n                            key={item.id} \r\n                            name={item.listName} \r\n                            icon={item.icon} \r\n                            count={item.list.length}\r\n                            active={item.active}\r\n                            activeFunction={() => this.changeActiveState(item.id)}\r\n                    />\r\n        })\r\n        let details = this.props.array.map((item) => {\r\n            //console.log(item);\r\n            return <Sidebaritem \r\n                            key={item.id} \r\n                            name={item.listName} \r\n                            icon={item.icon} \r\n                            count={item.list.length}\r\n                            active={item.active}\r\n                            activeFunction={() => this.changeActiveState(item.id)}\r\n                    />\r\n        })\r\n        return(\r\n            <div className=\"sidebarlist\">\r\n                {items}\r\n\r\n                {/* <div className=\"sidebar__addInput\" style={this.state.styl}  >\r\n                        <input type=\"text\" id=\"sidebar__input\" />\r\n                        <AddCircleSharpIcon onClick={this.callFuntctionHandler}/>  \r\n                </div> */}\r\n\r\n                <div className=\"sidebar__newList\">\r\n                    <div className=\"sidebar__add\" >\r\n                        <AddSharpIcon/>\r\n                        <input \r\n                                type=\"text\" \r\n                                id=\"sidebar__input\" \r\n                                onFocus={this.onFocusInputHandler} \r\n                                onBlur={(event) => this.onBlurInputHandler(event)}\r\n                                onKeyPress={this.add}\r\n                                onChange={(event) => this.storeListName(event)}  \r\n                                value={this.state.val}  \r\n                                placeholder=\"Unanmed List\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"sidebar__submitIcon\">\r\n                        <BookSharpIcon  \r\n                                onClick={this.addElementHandler} \r\n                                style={this.state.styl}\r\n                        />\r\n                        {/* <BookmarkBorderSharpIcon/> */}\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Sidebarlist;","import React, { Children, Component } from 'react'\r\n\r\nimport {db} from '../../Services/firebase'\r\nimport Sidebarlist from './Sidebarlist'\r\n// import AccountBoxSharpIcon from '@material-ui/icons/AccountBoxSharp';\r\nimport EmojiEmotionsSharpIcon from '@material-ui/icons/EmojiEmotionsSharp';\r\n\r\nimport './Sidebar.css'\r\n\r\nclass Sidebar extends Component\r\n{\r\n    state = {\r\n        name : \"Buddy\"\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.changeFunction();\r\n    }\r\n\r\n    render()\r\n    {\r\n        // console.log(this.props.children)\r\n        return(\r\n            <div className=\"sidebar\">\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Sidebar;","\r\n\r\nlet sidebarArray = [\r\n    {\r\n        active : true,\r\n        id : 1,\r\n        icon : 'WbSunnySharpIcon',\r\n        listName : 'My Day',\r\n        list : [],\r\n        listCount : 0\r\n    },\r\n    {\r\n        active : false,\r\n        id : 2,\r\n        icon : 'HomeSharpIcon',\r\n        listName : 'To-Do',\r\n        list : ['a','c'],\r\n        listCount : 0\r\n    },\r\n    {\r\n        active : false,\r\n        id : 3,\r\n        icon : 'LocalGroceryStoreSharpIcon',\r\n        listName : 'Grocery',\r\n        list : [],\r\n        listCount : 0\r\n        \r\n    },\r\n    {\r\n        active : false,\r\n        id : 4,\r\n        icon : 'ListSharpIcon',\r\n        listName : 'Others',\r\n        list : [],\r\n        listCount : 0\r\n    }\r\n];\r\n\r\n\r\nexport default sidebarArray;","import React, { Component } from 'react';\r\nimport StarHalfIcon from '@material-ui/icons/StarHalf';\r\n\r\nimport './DetailBg.css'\r\n\r\nclass DetailBg extends Component{\r\n    render()\r\n    {\r\n        return(\r\n            <div className=\"detailbg\">\r\n                <div className=\"detailbg__banner\">\r\n                    <p>To-Do</p>\r\n                    <StarHalfIcon/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DetailBg;","import React, { Component } from 'react';\r\n\r\nclass DetailItem extends Component{\r\n    render(){\r\n        // console.log(this.props);\r\n        return(\r\n            <div>\r\n                <p>{this.props.texts}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DetailItem;\r\n","import React, { Component } from 'react';\r\nimport sidebarArray from '../sidebar/sidebarArray'\r\nimport {db} from '../../Services/firebase'\r\nimport DetailBg from './DetailBg'\r\nimport DetailItem from './DetailItem'\r\nimport './Details.css'\r\nimport BookSharpIcon from '@material-ui/icons/BookSharp';\r\nimport AddSharpIcon from '@material-ui/icons/AddSharp';\r\n\r\nclass Detail extends Component{\r\n\r\n    \r\n\r\n    state = {\r\n        array : sidebarArray,\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        // console.log(\"Mounted\", this.props.array, \"Details\");\r\n    }\r\n\r\n    setOfflineArray = () =>{\r\n        db.collection(\"users\")\r\n            .get()\r\n            .then( snapshot => {\r\n                snapshot.docs.map((userDoc) =>{\r\n                    // console.log(userDoc['id'])\r\n                    db.collection(\"users\").doc(userDoc['id']).collection(\"listNames\")\r\n                        .get()\r\n                        .then( snapshot =>{\r\n                            let tempArray = []\r\n                            snapshot.docs.map((listnamesDoc) => {\r\n                                tempArray.push(listnamesDoc.data())\r\n                            })\r\n                            this.setState({\r\n                                array:tempArray\r\n                            })\r\n                            // return null;\r\n                        })\r\n                        .catch(error =>console.log(error))\r\n                })\r\n                // return null;\r\n            })\r\n            .catch(error => console.log(error))\r\n    }\r\n\r\n    \r\n\r\n\r\n    render()\r\n    {\r\n        // this.props.changeFunction();\r\n        let list = this.props.array.map((items =>{\r\n            // console.log(items);\r\n            if(items.active){\r\n                return items.list.map((item)=>{\r\n                    // console.log(item);\r\n                    \r\n                    return <DetailItem texts={item}/>\r\n                })\r\n            }\r\n        }))\r\n\r\n\r\n\r\n        return(\r\n            <div className=\"details\" >\r\n                <div >\r\n                    <DetailBg/>\r\n                </div>  \r\n                {list}\r\n                <div className=\"details__newList\">\r\n                    <div className=\"details__add\" >\r\n                        <AddSharpIcon/>\r\n                        <input \r\n                                // type=\"text\" \r\n                                // id=\"details__input\" \r\n                                // onFocus={this.onFocusInputHandler} \r\n                                // onBlur={(event) => this.onBlurInputHandler(event)}\r\n                                // onKeyPress={this.add}\r\n                                // onChange={(event) => this.storeListName(event)}  \r\n                                // value={this.state.val}  \r\n                                placeholder=\"Unanmed List\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"details__submitIcon\">\r\n                        <BookSharpIcon  \r\n                                // onClick={this.addElementHandler} \r\n                                // style={this.state.styl}\r\n                        />\r\n                        {/* <BookmarkBorderSharpIcon/> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Detail;","import React, { Component } from 'react';\nimport Sidebar from './Components/sidebar/Sidebar'\nimport Details from './Components/details/Details'\n// import sidebarArray from './Components/sidebar/sidebarArray'\nimport {db} from './Services/firebase'\nimport './App.css';\nimport EmojiEmotionsSharpIcon from '@material-ui/icons/EmojiEmotionsSharp';\nimport Sidebarlist from './Components/sidebar/Sidebarlist'\n\nclass App extends Component {\n\n  state = {\n    array : [],\n    name : \"Buddy\",\n  }\n\n  componentDidMount()\n  {\n      console.log(\"Mounted\");\n      this.setOfflineArray();\n      db.collection(\"users\").doc(\"iNIR1xqLjNNqpzMkuRJO\")\n            .get()\n            .then(snapshot => {\n                var tempName = (snapshot.data().Name);\n                console.log(tempName)\n                if(tempName !== \"\"){\n                    this.setState({\n                        name : tempName\n                    });\n                }\n                \n            })\n  }\n  \n\n\n  setOfflineArray = () =>{\n    console.log(\"entered\");\n    db.collection(\"users\")\n        .get()\n        .then( snapshot => {\n            snapshot.docs.map((userDoc) =>{\n                db.collection(\"users\").doc(userDoc['id']).collection(\"listNames\")\n                    .get()\n                    .then( snapshot =>{\n                        let tempArray = []\n                        snapshot.docs.map((listnamesDoc) => {\n                            tempArray.push(listnamesDoc.data())\n                        })\n                        tempArray.sort((a, b) => a.id - b.id);\n                        this.setState({\n                          array : tempArray\n                        })\n                        console.log(this.state.array)\n                    })\n                    .catch(error =>console.log(error))\n            })\n        })\n        .catch(error => console.log(error))\n\n        \n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        \n        {/* <Sidebar array={this.state.array} changeFunction={this.setOfflineArray}/> */}\n        <Sidebar array={this.state.array} changeFunction={this.setOfflineArray}>\n          <div className=\"sidebar__intro\">\n            <EmojiEmotionsSharpIcon/>\n            <p>Hi {this.state.name}</p>\n          </div>\n          <div className=\"sidebar__list\">\n              <Sidebarlist  array={this.state.array} setFunction={this.setOfflineArray} changeFunction={this.setOfflineArray}/>\n          </div> \n        </Sidebar>\n\n        <Details array={this.state.array} changeFunction={this.setOfflineArray}/> \n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}